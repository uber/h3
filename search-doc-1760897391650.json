{"searchDocs":[{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/","content":"","keywords":"","version":null},{"title":"Highlights​","type":1,"pageTitle":"Introduction","url":"/docs/#highlights","content":"H3 is a hierarchical geospatial index, which provides exact logical containment but only approximate geometric containment across the cell hierarchy. That is, points within children may have different parent cells, because child cells are not always entirely geometrically contained by the same parent.H3 was developed to address the challenges of Uber's data science needs.H3 can be used to join disparate data sets.In addition to the benefits of the hexagonal grid shape, H3 includes features for modeling flow.H3 is well suited to apply ML to geospatial data. ","version":null,"tagName":"h2"},{"title":"Comparisons​","type":1,"pageTitle":"Introduction","url":"/docs/#comparisons","content":"S2, an open source, hierarchical, discrete, and global grid system using square cells.Geohash, a system for encoding locations using a string of characters, creating a hierarchical, square grid system (a quadtree).Hexbin, the process of taking coordinates and binning them into hexagonal cells in analytics or mapping software.Admin Boundaries, officially designated areas used for aggregating and analyzing data.Placekey, a system for encoding points of interest (POIs) which incorporates H3 in its POI identifier. ","version":null,"tagName":"h2"},{"title":"Indexing functions","type":0,"sectionRef":"#","url":"/docs/api/indexing","content":"","keywords":"","version":null},{"title":"latLngToCell​","type":1,"pageTitle":"Indexing functions","url":"/docs/api/indexing#latlngtocell","content":"Indexes the location at the specified resolution, providing the index of the cell containing the location. This buckets the geographic point into the H3 grid. For more information, see thealgorithm description. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error latLngToCell(const LatLng *g, int res, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToLatLng​","type":1,"pageTitle":"Indexing functions","url":"/docs/api/indexing#celltolatlng","content":"Finds the center of the cell in grid space. See thealgorithm description for more information. The center will drift versus the centroid of the cell on Earth due to distortion from the gnomonic projection within the icosahedron face it resides on and its distance from the center of the icosahedron face. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToLatLng(H3Index cell, LatLng *g); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToBoundary​","type":1,"pageTitle":"Indexing functions","url":"/docs/api/indexing#celltoboundary","content":"Finds the boundary of the cell. For more information, see thealgorithm description. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToBoundary(H3Index cell, CellBoundary *bndry); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"Index inspection functions","type":0,"sectionRef":"#","url":"/docs/api/inspection","content":"","keywords":"","version":null},{"title":"getResolution​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#getresolution","content":"Returns the resolution of the index. (Works for cells, edges, and vertexes.) CJavaJavaScript (Live)PythonGoDuckDBShell int getResolution(H3Index h);  ","version":null,"tagName":"h2"},{"title":"getBaseCellNumber​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#getbasecellnumber","content":"Returns the base cell number of the index. (Works for cells, edges, and vertexes.) CJavaJavaScript (Live)PythonGoDuckDBShell int getBaseCellNumber(H3Index h);  ","version":null,"tagName":"h2"},{"title":"getIndexDigit​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#getindexdigit","content":"Returns an indexing digit of the index. Works for cells, edges and vertexes. CShell H3Error getIndexDigit(H3Index h, int res, H3Index *out);  Digits are 1-indexed starting with the resolution 1 digit. This function will return unused index digits as well as used ones, in that case they will be 7 for valid cells. ","version":null,"tagName":"h2"},{"title":"stringToH3​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#stringtoh3","content":"Converts the string representation to H3Index (uint64_t) representation. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error stringToH3(const char *str, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"h3ToString​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#h3tostring","content":"Converts the H3Index representation of the index to the string representation. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error h3ToString(H3Index h, char *str, size_t sz); str must be at least of length 17. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"isValidCell​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#isvalidcell","content":"Returns non-zero if this is a valid H3 cell index. CJavaJavaScript (Live)PythonGoDuckDBShell int isValidCell(H3Index h);  ","version":null,"tagName":"h2"},{"title":"isResClassIII​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#isresclassiii","content":"Returns non-zero if this index has a resolution with Class III orientation. CJavaJavaScript (Live)PythonGoDuckDBShell int isResClassIII(H3Index h);  ","version":null,"tagName":"h2"},{"title":"isPentagon​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#ispentagon","content":"Returns non-zero if this index represents a pentagonal cell. CJavaJavaScript (Live)PythonGoDuckDBShell int isPentagon(H3Index h);  ","version":null,"tagName":"h2"},{"title":"getIcosahedronFaces​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#geticosahedronfaces","content":"Find all icosahedron faces intersected by a given H3 cell. Faces are represented as integers from 0-19, inclusive. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getIcosahedronFaces(H3Index h, int* out); Face values are placed in the array out.out must be at least length of maxFaceCount(h). The array is sparse, and empty (no intersection) array values are represented by -1. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"maxFaceCount​","type":1,"pageTitle":"Index inspection functions","url":"/docs/api/inspection#maxfacecount","content":"Returns the maximum number of icosahedron faces the given H3 index may intersect. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error maxFaceCount(H3Index h3, int *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"Hierarchical grid functions","type":0,"sectionRef":"#","url":"/docs/api/hierarchy","content":"","keywords":"","version":null},{"title":"cellToParent​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#celltoparent","content":"Provides the unique ancestor (coarser) cell of the given cell for the provided resolution. If the input cell has resolution r, thenparentRes = r - 1 would give the immediate parent,parentRes = r - 2 would give the grandparent, and so on. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToParent(H3Index cell, int parentRes, H3Index *parent); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToChildren​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#celltochildren","content":"Provides the children (descendant) cells of cell at resolution childRes. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToChildren(H3Index cell, int childRes, H3Index *children); children must be an array of at least size cellToChildrenSize(cell, childRes). Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToChildrenSize​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#celltochildrensize","content":"Provides the number of children at a given resolution of the given cell. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToChildrenSize(H3Index cell, int childRes, int64_t *out); Provides the size of the children array needed for the given inputs to cellToChildren. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToCenterChild​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#celltocenterchild","content":"Provides the center child (finer) cell contained by cell at resolution childRes. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToCenterChild(H3Index cell, int childRes, H3Index *child); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToChildPos​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#celltochildpos","content":"Provides the position of the child cell within an ordered list of all children of the cell's parent at the specified resolution parentRes. The order of the ordered list is the same as that returned by cellToChildren. This is the complement of childPosToCell. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToChildPos(H3Index child, int parentRes, int64_t *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"childPosToCell​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#childpostocell","content":"Provides the child cell at a given position within an ordered list of all children of parent at the specified resolution childRes. The order of the ordered list is the same as that returned by cellToChildren. This is the complement of cellToChildPos. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error childPosToCell(int64_t childPos, H3Index parent, int childRes, H3Index *child); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"compactCells​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#compactcells","content":"Compacts a collection of H3 cells by recursively replacing children cells with their parents if all children are present. Input cells must all share the same resolution. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error compactCells(const H3Index *cellSet, H3Index *compactedSet, const int64_t numCells); Compacts cellSet into the array compactedSet.compactedSet must be at least the size of cellSet (in case the set cannot be compacted). Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"uncompactCells​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#uncompactcells","content":"Uncompacts the set compactedSet of indexes to the resolution res.h3Set must be at least of size uncompactCellsSize(compactedSet, numHexes, res). CJavaJavaScript (Live)PythonGoDuckDBShell H3Error uncompactCells(const H3Index *compactedSet, const int64_t numCells, H3Index *cellSet, const int64_t maxCells, const int res); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"uncompactCellsSize​","type":1,"pageTitle":"Hierarchical grid functions","url":"/docs/api/hierarchy#uncompactcellssize","content":"Provides the total resulting number of cells if uncompacting a cell set to a given resolution. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error uncompactCellsSize(const H3Index *compactedSet, const int64_t numCompacted, const int res, int64_t *out); Provides the size of the array needed by uncompactCells into out. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"Region functions","type":0,"sectionRef":"#","url":"/docs/api/regions","content":"","keywords":"","version":null},{"title":"polygonToCells​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#polygontocells","content":"Each binding's version of polygonToCells takes as input a GeoJSON-like data structure describing a polygon (i.e., an outer ring and optional holes) and a target cell resolution. It produces a collection of cells that are contained within the polygon. Containment is determined by centroids of the cells, so that a partitioning of polygons (covering an area without overlaps) will result in a partitioning of H3 cells. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error polygonToCells(const GeoPolygon *geoPolygon, int res, uint32_t flags, H3Index *out); In C, polygonToCells takes a GeoPolygon struct and preallocated, zeroed memory, and fills it with the covering cells. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"maxPolygonToCellsSize​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#maxpolygontocellssize","content":"Provides an upper bound on the number of cells needed for memory allocation purposes when computing polygonToCells on the given GeoJSON-like data structure. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error maxPolygonToCellsSize(const GeoPolygon *geoPolygon, int res, uint32_t flags, int64_t *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"polygonToCellsExperimental​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#polygontocellsexperimental","content":"Each binding's version of polygonToCellsExperimental takes as input a GeoJSON-like data structure describing a polygon (i.e., an outer ring and optional holes) and a target cell resolution. It produces a collection of cells that are contained within the polygon. This function differs from polygonToCells in that it uses an experimental new algorithm which supports center-based, fully-contained, and overlapping containment modes. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error polygonToCellsExperimental(const GeoPolygon *geoPolygon, int res, uint32_t flags, int64_t size, H3Index *out); In C, polygonToCellsExperimental takes a GeoPolygon struct and preallocated, zeroed memory, and fills it with the covering cells. size should be the size in number of H3Indexs of out. The valid values for flags are: Enum name\tInteger value\tDescriptionCONTAINMENT_CENTER\t0\tCell center is contained in the shape CONTAINMENT_FULL\t1\tCell is fully contained in the shape CONTAINMENT_OVERLAPPING\t2\tCell overlaps the shape at any point CONTAINMENT_OVERLAPPING_BBOX\t3\tCell bounding box overlaps shape Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"maxPolygonToCellsSizeExperimental​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#maxpolygontocellssizeexperimental","content":"Provides an upper bound on the number of cells needed for memory allocation purposes when computing polygonToCellsExperimental on the given GeoJSON-like data structure. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error maxPolygonToCellsSizeExperimental(const GeoPolygon *geoPolygon, int res, uint32_t flags, int64_t *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellsToLinkedMultiPolygon / cellsToMultiPolygon​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#cellstolinkedmultipolygon--cellstomultipolygon","content":"Create a GeoJSON-like multi-polygon describing the outline(s) of a set of cells. Polygon outlines will follow GeoJSON MultiPolygon order: Each polygon will have one outer loop, which is first in the list, followed by any holes. It is expected that all cells in the set have the same resolution and that the set contains no duplicates. Behavior is undefined if duplicates or multiple resolutions are present, and the algorithm may produce unexpected or invalid output. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellsToLinkedMultiPolygon(const H3Index *h3Set, const int numHexes, LinkedGeoPolygon *out); It is the responsibility of the caller to call destroyLinkedPolygon on the populated linked geo structure, or the memory for that structure will not be freed. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"destroyLinkedMultiPolygon​","type":1,"pageTitle":"Region functions","url":"/docs/api/regions#destroylinkedmultipolygon","content":"Free all allocated memory for a linked geo structure. The caller is responsible for freeing memory allocated to the input polygon struct. CJavaJavaScript (Live)PythonGoDuckDBShell void destroyLinkedMultiPolygon(LinkedGeoPolygon *polygon);  ","version":null,"tagName":"h2"},{"title":"Miscellaneous H3 functions","type":0,"sectionRef":"#","url":"/docs/api/misc","content":"","keywords":"","version":null},{"title":"degsToRads​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#degstorads","content":"Converts degrees to radians. CJavaJavaScript (Live)PythonGoDuckDBShell double degsToRads(double degrees);  ","version":null,"tagName":"h2"},{"title":"radsToDegs​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#radstodegs","content":"Converts radians to degrees. CJavaJavaScript (Live)PythonGoDuckDBShell double radsToDegs(double radians);  ","version":null,"tagName":"h2"},{"title":"getHexagonAreaAvgKm2​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#gethexagonareaavgkm2","content":"Average hexagon area in square kilometers at the given resolution. Excludes pentagons. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getHexagonAreaAvgKm2(int res, double *out);  ","version":null,"tagName":"h2"},{"title":"getHexagonAreaAvgM2​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#gethexagonareaavgm2","content":"Average hexagon area in square meters at the given resolution. Excludes pentagons. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getHexagonAreaAvgM2(int res, double *out);  ","version":null,"tagName":"h2"},{"title":"cellAreaRads2​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#cellarearads2","content":"Exact area of specific cell in square radians. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellAreaRads2(H3Index h, double *out);  ","version":null,"tagName":"h2"},{"title":"cellAreaKm2​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#cellareakm2","content":"Exact area of specific cell in square kilometers. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellAreaKm2(H3Index h, double *out);  ","version":null,"tagName":"h2"},{"title":"cellAreaM2​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#cellaream2","content":"Exact area of specific cell in square meters. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellAreaM2(H3Index h, double *out);  ","version":null,"tagName":"h2"},{"title":"getHexagonEdgeLengthAvgKm​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#gethexagonedgelengthavgkm","content":"Average hexagon edge length in kilometers at the given resolution. Excludes pentagons. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getHexagonEdgeLengthAvgKm(int res, double *out);  ","version":null,"tagName":"h2"},{"title":"getHexagonEdgeLengthAvgM​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#gethexagonedgelengthavgm","content":"Average hexagon edge length in meters at the given resolution. Excludes pentagons. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getHexagonEdgeLengthAvgM(int res, double *out);  ","version":null,"tagName":"h2"},{"title":"edgeLengthKm​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#edgelengthkm","content":"Exact edge length of specific unidirectional edge in kilometers. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error edgeLengthKm(H3Index edge, double *length);  ","version":null,"tagName":"h2"},{"title":"edgeLengthM​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#edgelengthm","content":"Exact edge length of specific unidirectional edge in meters. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error edgeLengthM(H3Index edge, double *length);  ","version":null,"tagName":"h2"},{"title":"edgeLengthRads​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#edgelengthrads","content":"Exact edge length of specific unidirectional edge in radians. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error edgeLengthRads(H3Index edge, double *length);  ","version":null,"tagName":"h2"},{"title":"getNumCells​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#getnumcells","content":"Number of unique H3 indexes at the given resolution. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getNumCells(int res, int64_t *out);  ","version":null,"tagName":"h2"},{"title":"getRes0Cells​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#getres0cells","content":"Provide all the resolution 0 H3 cells. These are the coarsest cells that can be represented in the H3 system and are the parents/ancestors of all other cells in the H3 grid system. The returned cells correspond to the 122 base cells. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getRes0Cells(H3Index *out); out must be an array of at least size res0CellCount(). ","version":null,"tagName":"h2"},{"title":"res0CellCount​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#res0cellcount","content":"Number of resolution 0 H3 indexes, which is defined as 122. CJavaJavaScript (Live)PythonGoDuckDBShell int res0CellCount(void);  ","version":null,"tagName":"h2"},{"title":"getPentagons​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#getpentagons","content":"All the pentagon H3 cells at the specified resolution. There are 12 pentagons at each resolution. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getPentagons(int res, H3Index *out); out must be an array of at least size pentagonIndexCount(). Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"pentagonCount​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#pentagoncount","content":"Number of pentagon H3 cells per resolution. This is always 12, but provided as a convenience. CJavaJavaScript (Live)PythonGoDuckDBShell int pentagonCount(void);  ","version":null,"tagName":"h2"},{"title":"greatCircleDistanceKm​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#greatcircledistancekm","content":"Gives the &quot;great circle&quot; or &quot;haversine&quot; distance between pairs of LatLng points (lat/lng pairs) in kilometers. CJavaJavaScript (Live)PythonGoDuckDBShell double greatCircleDistanceKm(const LatLng *a, const LatLng *b);  ","version":null,"tagName":"h2"},{"title":"greatCircleDistanceM​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#greatcircledistancem","content":"Gives the &quot;great circle&quot; or &quot;haversine&quot; distance between pairs of LatLng points (lat/lng pairs) in meters. CJavaJavaScript (Live)PythonGoDuckDBShell double greatCircleDistanceM(const LatLng *a, const LatLng *b);  ","version":null,"tagName":"h2"},{"title":"greatCircleDistanceRads​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#greatcircledistancerads","content":"Gives the &quot;great circle&quot; or &quot;haversine&quot; distance between pairs of LatLng points (lat/lng pairs) in radians. CJavaJavaScript (Live)PythonGoDuckDBShell double greatCircleDistanceRads(const LatLng *a, const LatLng *b);  ","version":null,"tagName":"h2"},{"title":"describeH3Error​","type":1,"pageTitle":"Miscellaneous H3 functions","url":"/docs/api/misc#describeh3error","content":"Provides a human-readable description of an H3Error error code. CJavaScript (Live)Shell char *describeH3Error(H3Error err); This function cannot fail, as it just returns a string stating that the H3Error value is itself invalid and does not allocate memory to do so. Do not call free on the result of this function. ","version":null,"tagName":"h2"},{"title":"Applications Using H3","type":0,"sectionRef":"#","url":"/docs/community/applications","content":"","keywords":"","version":null},{"title":"Visualization​","type":1,"pageTitle":"Applications Using H3","url":"/docs/community/applications#visualization","content":"kepler.gl - An open source geospatial analysis toolpydeck - High-scale spatial rendering in Python, powered by deck.glh3-viewer - Debugging tool to visualise h3 on mercator projection, powered by deck.gl ","version":null,"tagName":"h2"},{"title":"Vertex functions","type":0,"sectionRef":"#","url":"/docs/api/vertex","content":"","keywords":"","version":null},{"title":"cellToVertex​","type":1,"pageTitle":"Vertex functions","url":"/docs/api/vertex#celltovertex","content":"Returns the index for the specified cell vertex. Valid vertex numbers are between 0 and 5 (inclusive) for hexagonal cells, and 0 and 4 (inclusive) for pentagonal cells. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToVertex(H3Index origin, int vertexNum, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellToVertexes​","type":1,"pageTitle":"Vertex functions","url":"/docs/api/vertex#celltovertexes","content":"Returns the indexes for all vertexes of the given cell. CJavaJavaScript (Live)PythonDuckDBGoShell H3Error cellToVertexes(H3Index origin, H3Index *out); The length of the out array must be 6. If the given cell is a pentagon, one member of the array will be set to 0. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"vertexToLatLng​","type":1,"pageTitle":"Vertex functions","url":"/docs/api/vertex#vertextolatlng","content":"Returns the latitude and longitude coordinates of the given vertex. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error vertexToLatLng(H3Index vertex, LatLng *point); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"isValidVertex​","type":1,"pageTitle":"Vertex functions","url":"/docs/api/vertex#isvalidvertex","content":"Determines if the given H3 index represents a valid H3 vertex. CJavaJavaScript (Live)PythonGoDuckDBShell int isValidVertex(H3Index vertex); Returns 1 if the given index represents a valid H3 vertex. ","version":null,"tagName":"h2"},{"title":"Bindings","type":0,"sectionRef":"#","url":"/docs/community/bindings","content":"","keywords":"","version":null},{"title":"Athena​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#athena","content":"daniel-cortez-stevenson/aws-athena-udfs-h3 ","version":null,"tagName":"h2"},{"title":"Azure Data Explorer​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#azure-data-explorer","content":"Functions for Working with H3 Indexes ","version":null,"tagName":"h2"},{"title":"BigQuery​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#bigquery","content":"CARTO Analytics Toolbox ","version":null,"tagName":"h2"},{"title":"C#​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#c","content":"entrepreneur-interet-general/h3.standardrichardvasquez/h3net - A translation instead of a bindingpocketken/H3.net - A translation instead of a binding ","version":null,"tagName":"h2"},{"title":"ClickHouse​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#clickhouse","content":"Functions for Working with H3 Indexes ","version":null,"tagName":"h2"},{"title":"Clojure​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#clojure","content":"Factual/geo ","version":null,"tagName":"h2"},{"title":"Dart​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#dart","content":"festelo/h3_fluttercodewithsam110g/h3_flutter_plus ","version":null,"tagName":"h2"},{"title":"Databricks​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#databricks","content":"H3 geospatial functions ","version":null,"tagName":"h2"},{"title":"Delphi​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#delphi","content":"SkybuckFlying/h3_delphi ","version":null,"tagName":"h2"},{"title":"DuckDB​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#duckdb","content":"isaacbrodsky/h3-duckdb ","version":null,"tagName":"h2"},{"title":"ECL​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#ecl","content":"hpcc-systems/HPCC-Platform ","version":null,"tagName":"h2"},{"title":"Erlang​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#erlang","content":"helium/erlang-h3 ","version":null,"tagName":"h2"},{"title":"Go​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#go","content":"uber/h3-go ","version":null,"tagName":"h2"},{"title":"Java​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#java","content":"uber/h3-java ","version":null,"tagName":"h2"},{"title":"JavaScript​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#javascript","content":"uber/h3-jsdfellis/h3-noderealPrimoh/h3-reactnative ","version":null,"tagName":"h2"},{"title":"Julia​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#julia","content":"wookay/H3.jl ","version":null,"tagName":"h2"},{"title":"Kinetica​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#kinetica","content":"H3 Functions ","version":null,"tagName":"h2"},{"title":"OCaml​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#ocaml","content":"travisbrady/ocaml-h3 ","version":null,"tagName":"h2"},{"title":"Perl​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#perl","content":"mrdvt92/perl-Geo-H3 ","version":null,"tagName":"h2"},{"title":"PHP​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#php","content":"neatlife/php-h3abler98/h3-php ","version":null,"tagName":"h2"},{"title":"PostgreSQL​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#postgresql","content":"zachasme/h3-pg ","version":null,"tagName":"h2"},{"title":"Presto​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#presto","content":"foursquare/h3-presto ","version":null,"tagName":"h2"},{"title":"Python​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#python","content":"uber/h3-pyDahnJ/H3-Pandasfilimoa/h3-polars ","version":null,"tagName":"h2"},{"title":"R​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#r","content":"scottmmjackson/h3rcrazycapivara/h3-robrl-soil/h3jsr ","version":null,"tagName":"h2"},{"title":"Ruby​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#ruby","content":"seanhandley/h3_ruby ","version":null,"tagName":"h2"},{"title":"Rust​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#rust","content":"rustyconover/libh3-sysrustyconover/libh3nmandery/h3ronHydroniumLabs/h3o - A translation instead of a binding ","version":null,"tagName":"h2"},{"title":"Snowflake​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#snowflake","content":"CARTO Analytics Toolbox ","version":null,"tagName":"h2"},{"title":"SQLite3​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#sqlite3","content":"isaacbrodsky/h3-sqlite3 ","version":null,"tagName":"h2"},{"title":"SQL Server​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#sql-server","content":"tbbuck/H3.net.SqlClr ","version":null,"tagName":"h2"},{"title":"Spark​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#spark","content":"jchotard/h3spark (4.x)kevinschaich/h3-pyspark (3.x) ","version":null,"tagName":"h2"},{"title":"Swift​","type":1,"pageTitle":"Bindings","url":"/docs/community/bindings#swift","content":"JeremyEspresso/swift-h3 (4.x)pawelmajcher/SwiftyH3 (4.x) ","version":null,"tagName":"h2"},{"title":"Libraries Using H3","type":0,"sectionRef":"#","url":"/docs/community/libraries","content":"","keywords":"","version":null},{"title":"JavaScript​","type":1,"pageTitle":"Libraries Using H3","url":"/docs/community/libraries#javascript","content":"uber/geojson2H3 - Conversion utilities between H3 indexes and GeoJSON ","version":null,"tagName":"h2"},{"title":"Python​","type":1,"pageTitle":"Libraries Using H3","url":"/docs/community/libraries#python","content":"nmandery/h3ronpy - Raster to H3 conversion, smoothing of linked polygons. ","version":null,"tagName":"h2"},{"title":"Rust​","type":1,"pageTitle":"Libraries Using H3","url":"/docs/community/libraries#rust","content":"nmandery/h3ron - Raster to H3 conversion, smoothing of linked polygons. ","version":null,"tagName":"h2"},{"title":"Learning Resources","type":0,"sectionRef":"#","url":"/docs/community/tutorials","content":"","keywords":"","version":null},{"title":"Community​","type":1,"pageTitle":"Learning Resources","url":"/docs/community/tutorials#community","content":"H3 Slack workspace ","version":null,"tagName":"h2"},{"title":"Videos​","type":1,"pageTitle":"Learning Resources","url":"/docs/community/tutorials#videos","content":"Introduction to H3 (June 2019)Engineering an H3-based Geospatial Data Platform at UberBuilding City Cores with H3H3-js: Hexagons in the BrowserHexagon Convolution for Data Smoothing &amp; ForecastingSpatial Intelligence Using HexHierarchical Hexagons in DepthH3: Tiling the Earth with Hexagons (Introduction to H3, November 2018)H3: Tiling the Earth with Hexagons (Introduction to H3, January 2018) ","version":null,"tagName":"h2"},{"title":"Java​","type":1,"pageTitle":"Learning Resources","url":"/docs/community/tutorials#java","content":"H3 Measurements: Measurements of average cell area, average cell perimeter length, truncation error, and so on. ","version":null,"tagName":"h2"},{"title":"JavaScript​","type":1,"pageTitle":"Learning Resources","url":"/docs/community/tutorials#javascript","content":"H3 Tutorials on Observable ","version":null,"tagName":"h2"},{"title":"Python​","type":1,"pageTitle":"Learning Resources","url":"/docs/community/tutorials#python","content":"Usage (IPython Notebook)Unified Data Layers (IPython Notebook)H3 API examples on Urban Analytics (IPython Notebook) ","version":null,"tagName":"h2"},{"title":"Geohash","type":0,"sectionRef":"#","url":"/docs/comparisons/geohash","content":"","keywords":"","version":null},{"title":"Area distortion​","type":1,"pageTitle":"Geohash","url":"/docs/comparisons/geohash#area-distortion","content":"Because Geohash encodes latitude and longitudes pairs, it is subject to significant differences in area at different latitudes. A degree of longitude near a pole represents a significantly smaller distance than a degree of longitude near the equator. ","version":null,"tagName":"h2"},{"title":"Identifiers​","type":1,"pageTitle":"Geohash","url":"/docs/comparisons/geohash#identifiers","content":"Geohash uses strings for its cell indexes. Because they are strings, they can encode arbitrarily precise cells. H3 cell indexes are designed to be 64 bit integers, which can be rendered and transmitted as strings if needed. The integer representation can be used when high performance is needed, as integer operations are usually more performant than string operations. Because indexes are fixed size, H3 has a maximum resolution it can encode. ","version":null,"tagName":"h2"},{"title":"Geohash vs H3 Comparison​","type":1,"pageTitle":"Geohash","url":"/docs/comparisons/geohash#geohash-vs-h3-comparison","content":" Geohash on the left, H3 on the right. Data: San Francisco Street Tree List ","version":null,"tagName":"h2"},{"title":"Admin Boundaries","type":0,"sectionRef":"#","url":"/docs/comparisons/admin","content":"","keywords":"","version":null},{"title":"ZIP Codes​","type":1,"pageTitle":"Admin Boundaries","url":"/docs/comparisons/admin#zip-codes","content":"The article Stop Using Zip Codes for Geospatial Analysis summarizes a number of problems with using ZIP Codes. In short, ZIP Codes do not represent areas themselves but rather mail delivery routes. They also vary greatly in spatial size when rendered as ZIP Code Tabulation Areas and change for unrelated reasons. ","version":null,"tagName":"h2"},{"title":"Use case specific partitioning​","type":1,"pageTitle":"Admin Boundaries","url":"/docs/comparisons/admin#use-case-specific-partitioning","content":"When using manually drawn partitions, there is usually no spatial unit of analysis which can be compared. Edges of partitions may exhibit boundary effects due to not taking into account neighboring partitions. Manually drawn partitions can better incorporate human knowledge, but can require updating as that knowledge changes. It can take a significant amount of time and effort to define and update partitions manually. The varying size of partitions means the center of a partition may be unrelated to the center of the data points. ","version":null,"tagName":"h2"},{"title":"ZIP Codes vs H3 comparison​","type":1,"pageTitle":"Admin Boundaries","url":"/docs/comparisons/admin#zip-codes-vs-h3-comparison","content":" ZIP Codes on the left, H3 on the right. Data: New York City 2015 Street Tree Census ","version":null,"tagName":"h2"},{"title":"Placekey","type":0,"sectionRef":"#","url":"/docs/comparisons/placekey","content":"Placekey Placekey is a system for encoding points of interest (POIs), and incorporates H3 in its POI identifier. For example, the Placekey for the Ferry Building in San Francisco, zzw-22y@5vg-7gt-qzz, contains a What Part (zzw-22y) encoding a specific POI, and a Where Part (5vg-7gt-qzz) encoding where that POI is. The Where Part is an H3 cell index at resolution 10, using an alternate string encoding. The example Where Part represents the H3 index 8a283082a677fff. Placekey Where Parts can be losslessly converted to and from their equivalent H3 indexes.","keywords":"","version":null},{"title":"Hexbin","type":0,"sectionRef":"#","url":"/docs/comparisons/hexbin","content":"","keywords":"","version":null},{"title":"Hexbin vs H3 Comparison​","type":1,"pageTitle":"Hexbin","url":"/docs/comparisons/hexbin#hexbin-vs-h3-comparison","content":" Hexbins on the left, H3 on the right. Data: San Francisco Street Tree List ","version":null,"tagName":"h2"},{"title":"S2","type":0,"sectionRef":"#","url":"/docs/comparisons/s2","content":"","keywords":"","version":null},{"title":"Neighbors​","type":1,"pageTitle":"S2","url":"/docs/comparisons/s2#neighbors","content":"Squares have two classes of neighbors: those that they share an edge with, and those that they share a point with. This can complicate analysis of moving things in the real world, because they are very unlikely to move in a way aligned with the grid. Instead, the analyst will need to account for different types of neighbors. Hexagons have only one class of neighbor, that they share an edge with. This makes running convolutions and smoothing over the data much simpler, since only the grid distance (as opposed to the geographic distance) from a cell needs to be considered. ","version":null,"tagName":"h2"},{"title":"Subdivision​","type":1,"pageTitle":"S2","url":"/docs/comparisons/s2#subdivision","content":"S2 uses an aperture 4 system where each cell is subdivided into 4 finer, child cells. Squares subdivide exactly into 4 child squares. This means that when indexing a point to an S2 cell, and then truncating to the parent S2 cell, there is no possibility that the point is not contained in the bounds of the parent cell. This differs from H3 where the same operation is approximate. This is the case because hexagons do not exactly subdivide into 7 child hexagons. ","version":null,"tagName":"h2"},{"title":"Visualization​","type":1,"pageTitle":"S2","url":"/docs/comparisons/s2#visualization","content":"S2 cells are squares in the system's projection. When those cells are visualized on a map using a projection like the Web Mercator projection, the cells can subjectively appear distorted (i.e. as a quadrilateral rather than square). H3 cells have the same non-alignment with the map projection, but in our experience the effect is less noticeable to viewers for hexagons. ","version":null,"tagName":"h2"},{"title":"Links​","type":1,"pageTitle":"S2","url":"/docs/comparisons/s2#links","content":"Geometry on the Sphere: Google's S2 Library ","version":null,"tagName":"h2"},{"title":"S2 vs H3 Comparison​","type":1,"pageTitle":"S2","url":"/docs/comparisons/s2#s2-vs-h3-comparison","content":" S2 on the left, H3 on the right. Data: San Francisco Street Tree List ","version":null,"tagName":"h2"},{"title":"Generate the cell boundary in latitude/longitude coordinates of an H3Index cell","type":0,"sectionRef":"#","url":"/docs/core-library/cellToBoundaryDesc","content":"Generate the cell boundary in latitude/longitude coordinates of an H3Index cell This operation is performed by function cellToBoundary. See the comments in the function source code for more detail. The conversion is performed as a series of coordinate system conversions described below. See the page Coordinate Systems used by the H3 Core Library for more information on each of these coordinate systems. We note that the cell vertices are the center points of cells in an aperture 3 grid one resolution finer than the cell resolution, which we term a substrate grid. We precalculate the substrate ijk coordinates of a cell with ijk coordinates (0,0,0), adding additional aperture 3 and aperture 7 (if required, by Class III cell grid) substrate grid resolutions as required to transform the vertex coordinates into a Class II substrate grid. The function _faceIjkToGeoBoundary calculates the ijk coordinates of the cell center point in the appropriate substrate grid (determined in the last step), and each of the substrate vertices is translated using the cell center point ijk. Each vertex ijk is then transformed onto the appropriate face and Hex2d coordinate system using the approach taken in finding a cell center point. If adjacent vertices lie on different icosahedron faces a point is introduced at the intersection of the cell edge and icosahedron face edge.The Hex2d coordinates are then converted to latitude/longitude using _hex2dToGeo.","keywords":"","version":null},{"title":"Determine the latitude/longitude coordinates of the center point of an H3Index cell","type":0,"sectionRef":"#","url":"/docs/core-library/cellToLatLngDesc","content":"Determine the latitude/longitude coordinates of the center point of an H3Index cell This operation is performed by function cellToLatLng. See the comments in the function source code for more detail. The conversion is performed as a series of coordinate system conversions described below. See the page Coordinate Systems used by the H3 Core Library for more information on each of these coordinate systems. The function _h3ToFaceIjk then converts the H3 index to the appropriate icosahedron face number and normalized ijk coordinate's on that face's coordinate system as follows: We start by assuming that the cell center point falls on the same icosahedron face as its base cell.It is possible that the cell center point lies on an adjacent face (termed an overage in the code), in which case we would need to use a projection centered on that adjacent face instead. We recall that normalized ijk coordinates have at most two non-zero components, and that in a face-centered Class II system the sum of those components is a resolution-specific constant value for cells that lie on the edge of that icosahedral face. We determine whether an overage exists by taking the sum of the ijk components, and if there is an overage the positive ijk components indicate which adjacent face the cell center lies on. A lookup operation is then performed to find the appropriate rotation and translation to transform the ijk coordinates into the adjacent face-centered ijk system. The face-centered ijk coordinates are then converted into corresponding Hex2d coordinates using the function _ijkToHex2d.The function _hex2dToGeo takes the Hex2d coordinates and scales them into face-centered gnomonic coordinates, and then performs an inverse gnomonic projection to get the latitude/longitude coordinates.","keywords":"","version":null},{"title":"Coordinate systems","type":0,"sectionRef":"#","url":"/docs/core-library/coordsystems","content":"","keywords":"","version":null},{"title":"IJK Coordinates​","type":1,"pageTitle":"Coordinate systems","url":"/docs/core-library/coordsystems#ijk-coordinates","content":"Discrete hexagon planar grid systems naturally have 3 coordinate axes spaced 120° apart. We refer to such a system as an ijk coordinate system, for the three coordinate axes i, j, and k. A single ijk coordinate triplet is represented in the H3 Core Library using the structure type CoordIJK. Using an ijk coordinate system to address hexagon grid cells provides multiple valid addresses for each cell. Normalizing an ijk address (function _ijkNormalize) creates a unique address consisting of the minimal positive ijk components; this always results in at most two non-zero components.  ","version":null,"tagName":"h2"},{"title":"FaceIJK Coordinates​","type":1,"pageTitle":"Coordinate systems","url":"/docs/core-library/coordsystems#faceijk-coordinates","content":"The H3 Core Library centers an ijk coordinate system on each face of the icosahedron; the combination of a face number and ijk coordinates on that face's coordinate system is represented using the structure type FaceIJK. Each grid resolution is rotated ~19.1° relative to the next coarser resolution. The rotation alternates between counterclockwise and clockwise at each successive resolution, so that each resolution will have one of two possible orientations: Class II or Class III (using a terminology coined by R. Buckminster Fuller). The base cells, which make up resolution 0, are Class II.  ","version":null,"tagName":"h2"},{"title":"Hex2d Coordinates​","type":1,"pageTitle":"Coordinate systems","url":"/docs/core-library/coordsystems#hex2d-coordinates","content":"A Hex2d coordinate system is a cartesian coordinate system associated with a specific ijk coordinate system, where: the origin of the Hex2d system is centered on the origin cell of the ijk system, the positive x-axis of the Hex2d system is aligned with the i-axis of the ijk system, and1.0 unit distance in the Hex2d system is the distance between adjacent cell centers in the ijk coordinate system. Hex2d coordinates are represented using the structure type Vec2d. ","version":null,"tagName":"h2"},{"title":"Local IJ Coordinates​","type":1,"pageTitle":"Coordinate systems","url":"/docs/core-library/coordsystems#local-ij-coordinates","content":"Algorithms working with hexagons may want to refer to grid coordinates that are not interrupted by base cells or faces. These coordinates have 2 coordinate axes spaced 120° apart, with the coordinates anchored by an origin H3 index. local coordinates are only comparable when they have the same origin index.local coordinates are only valid near the origin. Pratically, this is within the same base cell or a neighboring base cell, except for pentagons.the coordinate space may have deleted or warped regions due to pentagon distortion.there may be multiple coordinates for the same index, with the same origin.the origin may not be at (0, 0) in the local coordinate space. Local IJ coordinates are represented using the structure type CoordIJ and an associated origin H3Index. ","version":null,"tagName":"h2"},{"title":"Compilation options","type":0,"sectionRef":"#","url":"/docs/core-library/compilation-options","content":"","keywords":"","version":null},{"title":"AUDIT_SOURCE_FILE_LIST​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#audit_source_file_list","content":"Whether to glob the list of source files and compare it to the ALL_SOURCE_FILES and EXAMPLE_SOURCE_FILES lists defined in CMake. This is a quality control measure to ensure that the source file list in CMakeLists.txt actually matches the sources in the repository and is not missing any files. ","version":null,"tagName":"h2"},{"title":"BUILD_ALLOC_TESTS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_alloc_tests","content":"Whether to build the parts of the test suite that exercise the H3_ALLOC_PREFIX feature. ","version":null,"tagName":"h2"},{"title":"BUILD_BENCHMARKS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_benchmarks","content":"Whether to build the benchmark suite. ","version":null,"tagName":"h2"},{"title":"BUILD_COUNTRY_BENCHMARKS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_country_benchmarks","content":"Whether to build benchmarks that use Natural Earth geometries. The geometries will be downloaded at build time using Node. ","version":null,"tagName":"h2"},{"title":"BUILD_FILTERS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_filters","content":"Whether to build the H3 command line filter executables. ","version":null,"tagName":"h2"},{"title":"BUILD_GENERATORS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_generators","content":"Whether to build generator executables used in the development of H3. This is not required for building the library as the output of these generators is checked in. ","version":null,"tagName":"h2"},{"title":"BUILD_TESTING​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_testing","content":"Whether to build the test suite. ","version":null,"tagName":"h2"},{"title":"BUILD_FUZZERS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#build_fuzzers","content":"Whether to build the fuzzer suite. ","version":null,"tagName":"h2"},{"title":"ENABLE_LIBFUZZER​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_libfuzzer","content":"Whether to build the fuzzers with libFuzzer (this expects to be used with Clang). If OFF, a main function suitable for use with American fuzzy lop is included. ","version":null,"tagName":"h2"},{"title":"CMAKE_BUILD_TYPE​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#cmake_build_type","content":"Should be set to Release for production builds, and Debug in development. ","version":null,"tagName":"h2"},{"title":"ENABLE_COVERAGE​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_coverage","content":"Whether to compile Debug builds with coverage instrumentation (compatible with GCC, Clang, and lcov). This also excludes defensive code in the library that should not be counted against coverage because it is unreachable. ","version":null,"tagName":"h2"},{"title":"ENABLE_DOCS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_docs","content":"Whether to build the Doxygen documentation. This is not the same as the H3 website, but is rather the documentation for the internal C library functions. ","version":null,"tagName":"h2"},{"title":"ENABLE_FORMAT​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_format","content":"Whether to enable using clang-format-14 to format source files before building. This should be enabled before submitting patches for H3 as continuous integration will fail if the formatting does not match. Only this version of clang-format should be used to format the sources as new releases of clang-format can change defaults, causing unintended churn of source code formatting. ","version":null,"tagName":"h2"},{"title":"ENABLE_LINTING​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_linting","content":"Whether to enable using clang-tidy to lint source files when building. Only invoked whenMakefile or Ninja CMake generatorsare used. ","version":null,"tagName":"h2"},{"title":"H3_ALLOC_PREFIX​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#h3_alloc_prefix","content":"Used for directing the library to use a different set of functions for memory management. ","version":null,"tagName":"h2"},{"title":"H3_PREFIX​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#h3_prefix","content":"Used for renaming the public API. ","version":null,"tagName":"h2"},{"title":"PRINT_TEST_FILES​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#print_test_files","content":"If enabled, CMake will print which CTest test case corresponds to which input file. ","version":null,"tagName":"h2"},{"title":"ENABLE_WARNINGS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#enable_warnings","content":"Whether to enable all compiler warnings. (i.e. -Wall) ","version":null,"tagName":"h2"},{"title":"WARNINGS_AS_ERRORS​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#warnings_as_errors","content":"Whether to treat compiler warnings as errors. While a useful tool for ensuring software quality, this should not be enabled for production builds as compiler warnings can change unexpectedly between versions. This is intended to be used withENABLE_WARNINGS on. ","version":null,"tagName":"h2"},{"title":"WRAP_VALGRIND​","type":1,"pageTitle":"Compilation options","url":"/docs/core-library/compilation-options#wrap_valgrind","content":"Whether to wrap invocations of the test suite with valgrind (if available). ","version":null,"tagName":"h2"},{"title":"Creating bindings for H3","type":0,"sectionRef":"#","url":"/docs/core-library/creating-bindings","content":"","keywords":"","version":null},{"title":"Function naming​","type":1,"pageTitle":"Creating bindings for H3","url":"/docs/core-library/creating-bindings#function-naming","content":"The make binding-functions target produces a file binding-functions containing a list of function in the H3 public API, one per line. You can use this as part of your build process to check how much of the H3 public API your bindings expose. This list does not include memory management functions that are needed to allocate arrays to be passed to the H3 API. Keeping similar names and purposes for functions can make it easier for your users to use the H3 API Reference. ","version":null,"tagName":"h2"},{"title":"Community​","type":1,"pageTitle":"Creating bindings for H3","url":"/docs/core-library/creating-bindings#community","content":"When ready, make a pull request to add your binding to the H3 documentation website. ","version":null,"tagName":"h2"},{"title":"Documentation​","type":1,"pageTitle":"Creating bindings for H3","url":"/docs/core-library/creating-bindings#documentation","content":"To be included in the H3 API reference, your binding should: Be reasonably up to date with uber/h3.Include bindings for the relevant functions in the output of make binding-functions. For example, stringToH3 may not be necessary if your bindings only supports string H3 indexes.Use the major and minor version of the version of H3 bound. For example, when binding H3 version 3.2.1, a valid binding version would be 3.2.0, but 4.2.1 would not be valid. ","version":null,"tagName":"h2"},{"title":"Unix-style Filters for H3","type":0,"sectionRef":"#","url":"/docs/core-library/filters","content":"","keywords":"","version":null},{"title":"Unix Command Line Examples​","type":1,"pageTitle":"Unix-style Filters for H3","url":"/docs/core-library/filters#unix-command-line-examples","content":"find the index for coordinates at resolution 5 latLngToCell --resolution 5 --latitude 40.689167 --longitude -74.044444 output the cell center point for H3Index 845ad1bffffffff cellToLatLng --index 845ad1bffffffff output the cell boundary for H3Index 845ad1bffffffff cellToBoundary --index 845ad1bffffffff find the components for the H3Index 845ad1bffffffff h3ToComponents --index 845ad1bffffffff output all indexes within distance 1 of the H3Index 845ad1bffffffff kRing -k 1 --origin 845ad1bffffffff output all hexagon indexes within distance 2 of the H3Index 845ad1bffffffff hexRange -k 2 --origin 845ad1bffffffff Note that the filters cellToLatLng and cellToBoundary take optional arguments that allow them to generate kml output. See the header comments in the corresponding source code files for details. ","version":null,"tagName":"h2"},{"title":"Directed edge functions","type":0,"sectionRef":"#","url":"/docs/api/uniedge","content":"","keywords":"","version":null},{"title":"areNeighborCells​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#areneighborcells","content":"Determines whether or not the provided H3 cells are neighbors. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error areNeighborCells(H3Index origin, H3Index destination, int *out); out will be 1 if the indexes are neighbors, 0 otherwise. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"cellsToDirectedEdge​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#cellstodirectededge","content":"Provides a directed edge H3 index based on the provided origin and destination. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellsToDirectedEdge(H3Index origin, H3Index destination, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"isValidDirectedEdge​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#isvaliddirectededge","content":"Determines if the provided H3Index is a valid unidirectional edge index. CJavaJavaScript (Live)PythonGoDuckDBShell int isValidDirectedEdge(H3Index edge); Returns 1 if it is a unidirectional edge H3Index, otherwise 0. ","version":null,"tagName":"h2"},{"title":"getDirectedEdgeOrigin​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#getdirectededgeorigin","content":"Provides the origin hexagon from the directed edge H3Index. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getDirectedEdgeOrigin(H3Index edge, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"getDirectedEdgeDestination​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#getdirectededgedestination","content":"Provides the destination hexagon from the directed edge H3Index. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error getDirectedEdgeDestination(H3Index edge, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"directedEdgeToCells​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#directededgetocells","content":"Provides the origin-destination pair of cells for the given directed edge. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error directedEdgeToCells(H3Index edge, H3Index* originDestination); The origin and destination are placed atoriginDestination[0] and originDestination[1], respectively. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"originToDirectedEdges​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#origintodirectededges","content":"Provides all of the directed edges from the current cell. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error originToDirectedEdges(H3Index origin, H3Index* edges); edges must be of length 6, and the number of directed edges placed in the array may be less than 6. If this is the case, one of the members of the array will be 0. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"directedEdgeToBoundary​","type":1,"pageTitle":"Directed edge functions","url":"/docs/api/uniedge#directededgetoboundary","content":"Provides the geographic lat/lng coordinates defining the directed edge. Note that this may be more than two points for complex edges. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error directedEdgeToBoundary(H3Index edge, CellBoundary* gb); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"Memory allocation","type":0,"sectionRef":"#","url":"/docs/core-library/custom-alloc","content":"","keywords":"","version":null},{"title":"Custom Memory Allocators​","type":1,"pageTitle":"Memory allocation","url":"/docs/core-library/custom-alloc#custom-memory-allocators","content":"caution On some systems, such as Windows, the undefined symbols cannot be undefined at build time. Further changes to the H3 build are needed to provide custom implementations. caution There are a few algorithms like kRing that still use the call stack to recurse and could run out of memory that way. H3 supports replacing the memory management functions (malloc, calloc, realloc, free) used by the library at build time. This can be used to integrate H3 within a managed framework. When using custom memory allocators, H3 prefixes the names of memory allocation functions with the string you specify. The application linking H3 must have the prefixed replacement functions defined, or you must change the H3 build to link against the prefixed replacement functions. When building H3, specify the H3_ALLOC_PREFIX option to your prefix of choice, as below: cmake -DH3_ALLOC_PREFIX=my_prefix_ .  Then, in your application using H3, implement the following functions, replacing my_prefix_ with the prefix you chose above: void* my_prefix_malloc(size_t size); void* my_prefix_calloc(size_t num, size_t size); void* my_prefix_realloc(void* ptr, size_t size); void my_prefix_free(void* ptr);  info H3 does not currently use realloc. Link to H3 as you would have without the custom allocators. The custom allocators will be used for allocating heap memory in H3. ","version":null,"tagName":"h2"},{"title":"Grid traversal functions","type":0,"sectionRef":"#","url":"/docs/api/traversal","content":"","keywords":"","version":null},{"title":"gridDistance​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddistance","content":"Provides the grid distance between two cells, which is defined as the minimum number of &quot;hops&quot; needed across adjacent cells to get from one cell to the other. Note that finding the grid distance may fail for a few reasons: the cells are not comparable (different resolutions),the cells are too far apart, orthe cells are separated by pentagonal distortion. This is the same set of limitations as the local IJ coordinate space functions. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDistance(H3Index origin, H3Index h3, int64_t *distance); Returns 0 (E_SUCCESS) on success, or an error if finding the distance failed. ","version":null,"tagName":"h2"},{"title":"gridRing​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#gridring","content":"Produces the &quot;hollow ring&quot; of cells which are exactly grid distance kfrom the origin cell. If pentagon distortion is encountered, this function will use a more memory-intensive approach than gridRingUnsafe in order to compute the ring. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridRing(H3Index origin, int k, H3Index* out); The caller should allocate memory for the maximum size of the ring, which is given by maxGridRingSize. If fewer than the maximum number of cells are generated, elements in out may be left zero. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"gridRingUnsafe​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#gridringunsafe","content":"Produces the &quot;hollow ring&quot; of cells which are exactly grid distance kfrom the origin cell. This function may fail if pentagonal distortion is encountered. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridRingUnsafe(H3Index origin, int k, H3Index* out); The caller should allocate memory for the maximum size of the ring, which is given by maxGridRingSize. Returns 0 (E_SUCCESS) if no pentagonal distortion was encountered. ","version":null,"tagName":"h2"},{"title":"maxGridRingSize​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#maxgridringsize","content":"This function provides the maximum number of cells in the grid that are exactlygrid distance k away from an origin, which is 6*k if k &gt; 0 and 1 if k == 0. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error maxGridRingSize(int k, int64_t* out); Returns 0 (E_SUCCESS) if no pentagonal distortion was encountered. ","version":null,"tagName":"h2"},{"title":"gridDisk​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddisk","content":"Produces the &quot;filled-in disk&quot; of cells which are at most grid distance kfrom the origin cell. Output order is not guaranteed. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDisk(H3Index origin, int k, H3Index* out); Elements of the output array may be left as zero, which can happen when crossing a pentagon. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"maxGridDiskSize​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#maxgriddisksize","content":"Maximum number of cells that can result from the gridDisk function for a given k. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error maxGridDiskSize(int k, int64_t *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"gridDiskDistances​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddiskdistances","content":"Produces the same set of cells as gridDisk, but along with each cell's grid distance from the origin cell. Output order is not guaranteed. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDiskDistances(H3Index origin, int k, H3Index* out, int* distances); Elements of the output array may be left as zero, which can happen when crossing a pentagon. Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"gridDiskUnsafe​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddiskunsafe","content":"Produces cells within grid distance k of the origin cell, just like gridDisk. However, the function may return an error code if pentagonal distorition is encountered. In this case, the output in the out array is undefined. Users can fall back to calling the slower but more robust gridDiskDistances. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDiskUnsafe(H3Index origin, int k, H3Index* out); Output is placed in the provided array in order of increasing distance from the origin. The provided array must be of size maxGridDiskSize(k). Returns 0 (E_SUCCESS) if no pentagonal distortion is encountered. ","version":null,"tagName":"h2"},{"title":"gridDiskDistancesUnsafe​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddiskdistancesunsafe","content":"gridDiskDistancesUnsafe produces indexes within k distance of the origin index. Output behavior is undefined when one of the indexes returned by this function is a pentagon or is in the pentagon distortion area. Output is placed in the provided array in order of increasing distance from the origin. The distances in hexagons is placed in the distances array at the same offset. The provided array must be of size maxGridDiskSize(k). CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDiskDistancesUnsafe(H3Index origin, int k, H3Index* out, int* distances); Returns 0 (E_SUCCESS) if no pentagonal distortion is encountered. ","version":null,"tagName":"h2"},{"title":"gridDiskDistancesSafe​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddiskdistancessafe","content":"gridDiskDistancesSafe produces indexes within k distance of the origin index. Output is placed in the provided array in order of increasing distance from the origin. The distances in hexagons is placed in the distances array at the same offset. The provided array must be of size maxGridDiskSize(k). CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDiskDistancesSafe(H3Index origin, int k, H3Index* out, int* distances); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"gridDisksUnsafe​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#griddisksunsafe","content":"gridDisksUnsafe takes an array of input cells and a max k and returns an array of cells sorted first by the original cell indices and then by the grid ring (0 to max), with no guaranteed sorting within each grid ring group. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridDisksUnsafe(H3Index* h3Set, int length, int k, H3Index* out); Returns 0 (E_SUCCESS) if no pentagonal distortion was encountered. ","version":null,"tagName":"h2"},{"title":"gridPathCells​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#gridpathcells","content":"Given two H3 cells, return a minimal-length contiguous path of cells between them (inclusive of the endpoint cells). This function may fail if the cells are very far apart, or if the cells are on opposite sides of a pentagon. Notes: The output of this function should not be considered stable across library versions. The only guarantees are that the path length will be gridDistance(start, end) + 1 and that every cell in the path will be a neighbor of the preceding cell. Paths exist in the H3 grid of cells, and may not align closely with either Cartesian lines or great arcs. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridPathCells(H3Index start, H3Index end, H3Index* out); Returns 0 (E_SUCCESS) if no pentagonal distortion was encountered. ","version":null,"tagName":"h2"},{"title":"gridPathCellsSize​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#gridpathcellssize","content":"Number of cells in a grid path from the start cell to the end cell, to be used for allocating memory. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error gridPathCellsSize(H3Index start, H3Index end, int64_t* size); Returns 0 (E_SUCCESS) on success, or an error if the path cannot be computed. ","version":null,"tagName":"h2"},{"title":"cellToLocalIj​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#celltolocalij","content":"Produces local IJ coordinates for an H3 cell anchored by an origin. mode is reserved for future expansion and must be set to 0. This function's output is not guaranteed to be compatible across different versions of H3. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error cellToLocalIj(H3Index origin, H3Index h3, uint32_t mode, CoordIJ *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"localIjToCell​","type":1,"pageTitle":"Grid traversal functions","url":"/docs/api/traversal#localijtocell","content":"Produces an H3 cell from local IJ coordinates anchored by an origin. mode is reserved for future expansion and must be set to 0. This function's output is not guaranteed to be compatible across different versions of H3. CJavaJavaScript (Live)PythonGoDuckDBShell H3Error localIjToCell(H3Index origin, const CoordIJ *ij, uint32_t mode, H3Index *out); Returns 0 (E_SUCCESS) on success. ","version":null,"tagName":"h2"},{"title":"H3 Index","type":0,"sectionRef":"#","url":"/docs/core-library/h3Indexing","content":"","keywords":"","version":null},{"title":"Introduction​","type":1,"pageTitle":"H3 Index","url":"/docs/core-library/h3Indexing#introduction","content":"The H3 system assigns a unique hierarchical index to each cell. Each directed edge and vertex is assigned an index based on its origin or owner cell, respectively. ","version":null,"tagName":"h2"},{"title":"H3Index Representation​","type":1,"pageTitle":"H3 Index","url":"/docs/core-library/h3Indexing#h3index-representation","content":"An H3Index is the 64-bit integer representation of an H3 index, which may be one of multiple modes to indicate the concept being indexed. Mode 0 is reserved and indicates an invalid H3 index.Mode 1 is an H3 Cell (Hexagon/Pentagon) index.Mode 2 is an H3 Directed Edge (Cell A -&gt; Cell B) index.Mode 3 is planned to be a bidirectional edge (Cell A &lt;-&gt; Cell B).Mode 4 is an H3 Vertex (i.e. a single vertex of an H3 Cell). The canonical string representation of an H3Index is the hexadecimal representation of the integer, using lowercase letters. The string representation is variable length (no zero padding) and is not prefixed or suffixed. ","version":null,"tagName":"h2"},{"title":"Invalid Index​","type":1,"pageTitle":"H3 Index","url":"/docs/core-library/h3Indexing#invalid-index","content":"Mode 0 contains a special index, H3_NULL, which is unique: it is bit-equivalent to 0. This index indicates, specifically, an invalid, missing, or uninitialized H3 index; it is analogous to NaN in floating point. It should be used instead of an arbitrary Mode 0 index, due to its uniqueness and easy identifiability. A mode 0 index could also indicate an error code has been provided instead of a valid H3 index. ","version":null,"tagName":"h3"},{"title":"Bit layout of H3Index​","type":1,"pageTitle":"H3 Index","url":"/docs/core-library/h3Indexing#bit-layout-of-h3index","content":"The layout of an H3Index is shown below in table form. The interpretation of the &quot;Mode-Dependent&quot; field differs depending on the mode of the index. \t0x0F\t0x0E\t0x0D\t0x0C\t0x0B\t0x0A\t0x09\t0x08\t0x07\t0x06\t0x05\t0x04\t0x03\t0x02\t0x01\t0x00 0x30\tReserved\tMode\tMode-Dependent\tResolution\tBase cell 0x20\tBase cell\tDigit 1\tDigit 2\tDigit 3\tDigit 4\tDigit 5 0x10\tDigit 5\tDigit 6\tDigit 7\tDigit 8\tDigit 9\tDigit 10 0x00\tDigit 10\tDigit 11\tDigit 12\tDigit 13\tDigit 14\tDigit 15 ","version":null,"tagName":"h2"},{"title":"Links​","type":1,"pageTitle":"H3 Index","url":"/docs/core-library/h3Indexing#links","content":"Observable notebook example: H3 Index Bit Layout ","version":null,"tagName":"h2"},{"title":"Overview of the H3 Geospatial Indexing System","type":0,"sectionRef":"#","url":"/docs/core-library/overview","content":"Overview of the H3 Geospatial Indexing System The H3 geospatial indexing system is a discrete global grid system (see Sahr et al., 2003) consisting of a multi-precision hexagonal tiling of the sphere with hierarchical indexes. The hexagonal grid system is created on the planar faces of a sphere-circumscribed icosahedron, and the grid cells are then projected to the surface of the sphere using an inverse face-centered polyhedral gnomonic projection. The coordinate reference system (CRS) is spherical coordinates with the WGS84/EPSG:4326 authalic radius. It is common to use WGS84 CRS data with the H3 library. The icosahedron is fixed relative to the sphere using a Dymaxion orientation (due to R. Buckminster Fuller). This orientation of a spherical icosahedron places all 12 icosahedron vertices in the ocean. (At the time of H3's development, this was the only known orientation with this property. Others have since been found.) The H3 grid is constructed on the icosahedron by recursively creating increasingly higher precision hexagon grids until the desired resolution is achieved. Note that it is impossible to tile the sphere/icosahedron completely with hexagons; each resolution of an icosahedral hexagon grid must contain exactly 12 pentagons at every resolution, with one pentagon centered on each of the icosahedron vertices. The first H3 resolution (resolution 0) consists of 122 cells (110 hexagons and 12 icosahedron vertex-centered pentagons), referred to as the base cells. These were chosen to capture as much of the symmetry of the spherical icosahedron as possible. These base cells are assigned numbers from 0 to 121 based on the latitude of their center points; base cell 0 has the northern most center point, while base cell 121 has the southern most center point. Each subsequent resolution beyond resolution 0 is created using an aperture 7 resolution spacing (aperture refers to the number of cells in the next finer resolution grid for each cell); as resolution increases the unit length is scaled by sqrt(7) and each hexagon has 1/7th the area of a hexagon at the next coarser resolution (as measured on the icosahedron). H3 provides 15 finer grid resolutions in addition to the resolution 0 base cells. The finest resolution, resolution 15, has cells with an area of less than 1 m2. A table detailing the average cell area for each H3 resolution is available here. Note: you can create KML files to visualize the H3 grids by running the kml make target. It will place the files in the KML output sub-directory.","keywords":"","version":null},{"title":"Conversion from latitude/longitude to containing H3 cell index","type":0,"sectionRef":"#","url":"/docs/core-library/latLngToCellDesc","content":"Conversion from latitude/longitude to containing H3 cell index This operation is performed by function latLngToCell. See the comments in the function for more detail. The conversion is performed as a series of coordinate system conversions described below. See the page Coordinate Systems used by the H3 Core Library for more information on each of these coordinate systems. The input latitude/longitude coordinate is first converted into the containing icosahedron face and a Hex2d coordinate on that face using function _geoToHex2d, which determines the correct face and then performs a face-centered gnomonic projection into face-centered polar coordinates. These polar coordinates are then scaled appropriately to a Hex2d coordinate on the input grid resolution r. The Hex2d coordinate is converted into resolution r normalized ijk coordinates using function _hex2dToCoordIJK. The face and face-centered ijk coordinates are then converted into an H3Index representation using the following steps: The H3 index digits are calculated from resolution r up to 0, adjusting the ijk coordinates at each successively coarser resolution.When resolution 0 is reached, if the remaining ijk coordinates are (0,0,0) then the base cell centered on the face is chosen for the index.If the remaining resolution 0 ijk coordinates are not (0,0,0), then a lookup operation is performed to find the appropriate base cell and the required rotation (if any) to orient the cell in that base cell's coordinate system. The index is then translated and rotated into the coordinate system centered on the new base cell.","keywords":"","version":null},{"title":"Public API","type":0,"sectionRef":"#","url":"/docs/core-library/usage","content":"","keywords":"","version":null},{"title":"API Versioning​","type":1,"pageTitle":"Public API","url":"/docs/core-library/usage#api-versioning","content":"The functions defined in h3api.h adhere to Semantic Versioning. ","version":null,"tagName":"h2"},{"title":"Header preprocessing​","type":1,"pageTitle":"Public API","url":"/docs/core-library/usage#header-preprocessing","content":"The file h3api.h.in is preprocessed into the file h3api.h as part of H3's build process. The preprocessing inserts the correct values for the H3_VERSION_MAJOR, H3_VERSION_MINOR, and H3_VERSION_PATCH macros. ","version":null,"tagName":"h2"},{"title":"API preconditions​","type":1,"pageTitle":"Public API","url":"/docs/core-library/usage#api-preconditions","content":"The H3 API expects valid input. Behavior of the library may be undefined when given invalid input. Indexes should be validated with isValidCell or isValidDirectedEdge as appropriate. The library attempts to validate inputs and return useful error codes if input is invalid. Which inputs are validated, and how precisely they are validated, may change between versions of the library. As a result the specific error code returned may change. ","version":null,"tagName":"h2"},{"title":"Function renaming​","type":1,"pageTitle":"Public API","url":"/docs/core-library/usage#function-renaming","content":"The H3_PREFIX exists to rename all functions in the H3 public API with a prefix chosen at compile time. The default is to have no prefix. This can be needed when linking multiple copies of the H3 library in order to avoid naming collisions. Internal functions and symbols are not renamed. ","version":null,"tagName":"h2"},{"title":"Aggregation","type":0,"sectionRef":"#","url":"/docs/highlights/aggregation","content":"","keywords":"","version":null},{"title":"References​","type":1,"pageTitle":"Aggregation","url":"/docs/highlights/aggregation#references","content":"Use case: H3: Uber’s Hexagonal Hierarchical Spatial Index Observable notebook example: Intro to h3-jsJupyter notebook example: H3 Python API ","version":null,"tagName":"h2"},{"title":"Flow Modelling","type":0,"sectionRef":"#","url":"/docs/highlights/flowmodel","content":"","keywords":"","version":null},{"title":"Links​","type":1,"pageTitle":"Flow Modelling","url":"/docs/highlights/flowmodel#links","content":"Observable notebook example: H3 Travel Times ","version":null,"tagName":"h2"},{"title":"Testing strategy","type":0,"sectionRef":"#","url":"/docs/core-library/testing","content":"","keywords":"","version":null},{"title":"Unit testing​","type":1,"pageTitle":"Testing strategy","url":"/docs/core-library/testing#unit-testing","content":"Github Actions are used to run the H3 test suite for every commit. A variety of configurations, described below, are tested. Coverage information is collected in Coveralls. Because of the self-contained nature of the H3 library, we seek to have as close to 100% code coverage as possible. Operating system\tCompiler\tBuild type\tProcessor architecture\tSpecial notesLinux (Ubuntu)\tClang\tDebug, Release\tx64\tclang-format-14 is used to ensure all code is consistently formatted Linux\tClang\tDebug\tx64\tAn additional copy of the job runs with Valgrind Linux\tClang\tDebug\tx64\tAn additional copy of the job runs with coverage reporting, and excerising the H3_PREFIX mechanism. Linux\tgcc\tDebug, Release\tx64 Mac OS\tApple Clang\tDebug, Release\tx64 Windows\tMSVC\tDebug, Release\tx64\tStatic library Windows\tMSVC\tDebug, Release\tx86\tStatic library Windows\tMSVC\tDebug, Release\tx64\tDynamic library; testing is not run in this configuration Windows\tMSVC\tDebug, Release\tx86\tDynamic library; testing is not run in this configuration ","version":null,"tagName":"h2"},{"title":"Defensive code​","type":1,"pageTitle":"Testing strategy","url":"/docs/core-library/testing#defensive-code","content":"H3 uses preprocessor macros borrowed from SQLite's testing methodology to include defensive code in the library. Defensive code is code that handles error conditions for which there are no known test cases to demonstrate it. The lack of known test cases means that without the macros, the defensive cases could inappropriately reduce coverage metrics, disincentivizing including them. The macros behave differently, depending on the build configuration: Under release builds of the library (CMAKE_BUILD_TYPE=Release), the defensive code is included without modification. These branches are intended to be very simple (usually only returning an error code and possibly freeing some resources) and to be visually inspectable. Under debug builds of the library (CMAKE_BUILD_TYPE=Debug), the defensive code is included and assert calls are included if the defensive code is invoked. Any unit test or fuzzer which can demonstrate the defensive code is actually reached will trigger a test failure and the developers can be alerted to cover the defensive code in unit tests. Under coverage builds of the library (CMAKE_BUILD_TYPE=Debug ENABLE_COVERAGE=ON), the defensive code is not included by replacing its condition with a constant value. The compiler removes the defensive code and it is not counted in coverage metrics. This is intended only for determining test coverage of the library. ","version":null,"tagName":"h2"},{"title":"Benchmarks​","type":1,"pageTitle":"Testing strategy","url":"/docs/core-library/testing#benchmarks","content":"H3 uses benchmarks to offer a comparison of the library's performance between revisions. Benchmarks are automatically run on Linux x64 with Clang and GCC compilers for each commit in Github Actions. ","version":null,"tagName":"h2"},{"title":"Fuzzers​","type":1,"pageTitle":"Testing strategy","url":"/docs/core-library/testing#fuzzers","content":"H3 uses fuzzers to find novel inputs that crash or result in other undefined behavior. On each commit, CI is triggered to run OSS-Fuzz for H3. OSS-Fuzz regularly runs fuzzers against the latest development version of H3 and reports newly discovered issues to the H3 core maintainers. ","version":null,"tagName":"h2"},{"title":"Joining","type":0,"sectionRef":"#","url":"/docs/highlights/joining","content":"","keywords":"","version":null},{"title":"References​","type":1,"pageTitle":"Joining","url":"/docs/highlights/joining#references","content":"Example: PlacekeyJupyter notebook example: Unified Data LayersObservable notebook example: Suitability Analysis ","version":null,"tagName":"h2"},{"title":"Indexing","type":0,"sectionRef":"#","url":"/docs/highlights/indexing","content":"","keywords":"","version":null},{"title":"Links​","type":1,"pageTitle":"Indexing","url":"/docs/highlights/indexing#links","content":"Observable notebook example: H3 Hierarchical (Non)ContainmentObservable notebook example: Shape simplification with H3 ","version":null,"tagName":"h2"},{"title":"Machine Learning","type":0,"sectionRef":"#","url":"/docs/highlights/ml","content":"","keywords":"","version":null},{"title":"Links​","type":1,"pageTitle":"Machine Learning","url":"/docs/highlights/ml#links","content":"Jupyter notebook example: Uber H3 API examples on Urban Analytics in the city of Toulouse (France) ","version":null,"tagName":"h2"},{"title":"Tables of Cell Statistics Across Resolutions","type":0,"sectionRef":"#","url":"/docs/core-library/restable","content":"","keywords":"","version":null},{"title":"Cell counts​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#cell-counts","content":"We list the number of hexagons and pentagons at each H3 resolution.There are always exactly 121212 pentagons at every resolution. Res\tTotal number of cells\tNumber of hexagons\tNumber of pentagons0\t122\t110\t12 1\t842\t830\t12 2\t5,882\t5,870\t12 3\t41,162\t41,150\t12 4\t288,122\t288,110\t12 5\t2,016,842\t2,016,830\t12 6\t14,117,882\t14,117,870\t12 7\t98,825,162\t98,825,150\t12 8\t691,776,122\t691,776,110\t12 9\t4,842,432,842\t4,842,432,830\t12 10\t33,897,029,882\t33,897,029,870\t12 11\t237,279,209,162\t237,279,209,150\t12 12\t1,660,954,464,122\t1,660,954,464,110\t12 13\t11,626,681,248,842\t11,626,681,248,830\t12 14\t81,386,768,741,882\t81,386,768,741,870\t12 15\t569,707,381,193,162\t569,707,381,193,150\t12 ","version":null,"tagName":"h2"},{"title":"Cell areas​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#cell-areas","content":"caution Cell areas are computed with a spherical model of the earth using theauthalic radiusgiven byWGS84/EPSG:4326. ","version":null,"tagName":"h2"},{"title":"Average area in km2​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#average-area-in-km2","content":"The area of an H3 cell varies based on its position relative to theicosahedron vertices. We show the average hexagon areas for each resolution. All pentagons within a resolution have the same area. Res\tAverage Hexagon Area (km2)\tPentagon Area* (km2)\tRatio (P/H)0\t4,357,449.416078381\t2,562,182.162955496\t0.5880 1\t609,788.441794133\t328,434.586246469\t0.5386 2\t86,801.780398997\t44,930.898497879\t0.5176 3\t12,393.434655088\t6,315.472267516\t0.5096 4\t1,770.347654491\t896.582383141\t0.5064 5\t252.903858182\t127.785583023\t0.5053 6\t36.129062164\t18.238749548\t0.5048 7\t5.161293360\t2.604669397\t0.5047 8\t0.737327598\t0.372048038\t0.5046 9\t0.105332513\t0.053147195\t0.5046 10\t0.015047502\t0.007592318\t0.5046 11\t0.002149643\t0.001084609\t0.5046 12\t0.000307092\t0.000154944\t0.5046 13\t0.000043870\t0.000022135\t0.5046 14\t0.000006267\t0.000003162\t0.5046 15\t0.000000895\t0.000000452\t0.5046 *: Within a given resolution, all pentagons have the same area. ","version":null,"tagName":"h3"},{"title":"Average area in m2​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#average-area-in-m2","content":"Here are the same areas, but in m2. Res\tAverage Hexagon Area (m2)\tPentagon Area* (m2)0\t4,357,449,416,078.392\t2,562,182,162,955.496 1\t609,788,441,794.134\t328,434,586,246.469 2\t86,801,780,398.997\t44,930,898,497.879 3\t12,393,434,655.088\t6,315,472,267.516 4\t1,770,347,654.491\t896,582,383.141 5\t252,903,858.182\t127,785,583.023 6\t36,129,062.164\t18,238,749.548 7\t5,161,293.360\t2,604,669.397 8\t737,327.598\t372,048.038 9\t105,332.513\t53,147.195 10\t15,047.502\t7,592.318 11\t2,149.643\t1,084.609 12\t307.092\t154.944 13\t43.870\t22.135 14\t6.267\t3.162 15\t0.895\t0.452 *: Within a given resolution, all pentagons have the same area. ","version":null,"tagName":"h3"},{"title":"Hexagon min and max areas​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#hexagon-min-and-max-areas","content":"The area of an H3 cell varies based on its position relative to theicosahedron vertices. We compute the minimum and maximum values for the hexagon areas (excluding the pentagons) at each resolution, and show their ratio. Res\tMin Hexagon Area (km^2)\tMax Hexagon Area (km^2)\tRatio (max/min)0\t4,106,166.334463915\t4,977,807.027442012\t1.212276 1\t447,684.201817940\t729,486.875275344\t1.629468 2\t56,786.622889474\t104,599.807218925\t1.841980 3\t7,725.505769639\t14,950.773301379\t1.935248 4\t1,084.005635363\t2,135.986983965\t1.970457 5\t153.766244448\t305.144308779\t1.984469 6\t21.910021013\t43.592111685\t1.989597 7\t3.126836030\t6.227445905\t1.991613 8\t0.446526174\t0.889635157\t1.992347 9\t0.063780227\t0.127090737\t1.992635 10\t0.009110981\t0.018155820\t1.992740 11\t0.001301542\t0.002593689\t1.992782 12\t0.000185933\t0.000370527\t1.992797 13\t0.000026562\t0.000052932\t1.992802 14\t0.000003795\t0.000007562\t1.992805 15\t0.000000542\t0.000001080\t1.992805 ","version":null,"tagName":"h3"},{"title":"Edge lengths​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#edge-lengths","content":"caution Edge lengths are computed with a spherical model of the earth using theauthalic radiusgiven byWGS84/EPSG:4326. Average edge lengths were calculated exactly for resolutions 0 through 6 and extrapolated for finer resolutions. Res\tAverage edge length (Km)0\t1281.256011 1\t483.0568391 2\t182.5129565 3\t68.97922179 4\t26.07175968 5\t9.854090990 6\t3.724532667 7\t1.406475763 8\t0.531414010 9\t0.200786148 10\t0.075863783 11\t0.028663897 12\t0.010830188 13\t0.004092010 14\t0.001546100 15\t0.000584169 ","version":null,"tagName":"h2"},{"title":"Appendix: Methodology​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#appendix-methodology","content":" Hexagons have 7 hexagon children. Pentagons have 6 children: 5 hexagons and 1 pentagon. ","version":null,"tagName":"h2"},{"title":"Cell counts​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#cell-counts-1","content":"By definition, resolution 0 has 110110110hexagons and 121212 pentagons, for a total of 122122122 cells. In fact, every H3 resolution has exactly 121212 pentagons, which are always centered at the icosahedron vertices; the number of hexagons increases with each resolution. Formula Accounting for both hexagons and pentagons, the total number of cells at resolution rrr is c(r)=2+120⋅7r.c(r) = 2 + 120 \\cdot 7^r.c(r)=2+120⋅7r. Derivation of the cell count formula​ We can derive the formula above with the following steps. First, let h(n)h(n)h(n) be the number of children n≥0n \\geq 0n≥0 resolution levels below any single hexagaon. Any hexagon has 777 immediate children, so recursion gives us that h(n)=7n.h(n) = 7^n.h(n)=7n. Next, let p(n)p(n)p(n) be the number of children n≥0n \\geq 0n≥0 resolution levels below any single pentagon. Any pentagon has 555 hexagonal immediate children and 111 pentagonal immediate child. Thus, p(0)=1p(0) = 1p(0)=1 and p(1)=6p(1) = 6p(1)=6. For n≥1n \\geq 1n≥1, we get the general recurrence relation p(n)=5⋅h(n−1)+p(n−1)=5⋅7n−1+p(n−1).\\begin{aligned} p(n) &amp;= 5 \\cdot h(n-1) + p(n-1) \\\\ &amp;= 5 \\cdot 7^{n-1} + p(n-1). \\end{aligned}p(n)​=5⋅h(n−1)+p(n−1)=5⋅7n−1+p(n−1).​ For n≥0n \\geq 0n≥0, after working through the recurrence, we get that p(n)=1+5⋅∑k=1n 7k−1=1+5⋅7n−16,\\begin{aligned} p(n) &amp;= 1 + 5 \\cdot \\sum_{k=1}^n\\ 7^{k-1} \\\\ &amp;= 1 + 5 \\cdot \\frac{7^n - 1}{6}, \\end{aligned}p(n)​=1+5⋅k=1∑n​ 7k−1=1+5⋅67n−1​,​ using the closed form for ageometric series. Finally, using the closed forms for h(n)h(n)h(n) and p(n)p(n)p(n), and the fact that (by definition) resolution 0 has121212 pentagons and 110110110 hexagons, we get the closed form for the total number of cellsat resolution rrr as c(r)=12⋅p(r)+110⋅h(r)=2+120⋅7r.\\begin{aligned} c(r) &amp;= 12 \\cdot p(r) + 110 \\cdot h(r) \\\\ &amp;= 2 + 120 \\cdot 7^r. \\end{aligned}c(r)​=12⋅p(r)+110⋅h(r)=2+120⋅7r.​ Jupyter notebook​ A notebook to produce the cell count table above can befound here. ","version":null,"tagName":"h3"},{"title":"Cell areas​","type":1,"pageTitle":"Tables of Cell Statistics Across Resolutions","url":"/docs/core-library/restable#cell-areas-1","content":"Cell areas are computed with a spherical model of the earth using theauthalic radiusgiven byWGS84/EPSG:4326. The h3-py-notebooks repohas notebooks for producing theaverage cell area tableand themin/max area table. ","version":null,"tagName":"h3"},{"title":"Installation","type":0,"sectionRef":"#","url":"/docs/installation","content":"","keywords":"","version":null},{"title":"Package managers​","type":1,"pageTitle":"Installation","url":"/docs/installation#package-managers","content":"PythonJavaJavaScriptHomebrewDuckDB Using PyPi, run: pip install h3 Using Conda, run: conda config --add channels conda-forge conda install h3-py  ","version":null,"tagName":"h2"},{"title":"Install from source​","type":1,"pageTitle":"Installation","url":"/docs/installation#install-from-source","content":"First, clone the repository or download the sourceand check out the latest release: git clone https://github.com/uber/h3.git cd h3 git checkout v$(&lt;VERSION)  Note: You must install build dependencies for your operating system. mac OSalpineDebian/UbuntuWindowsFreeBSD First make sure you have the developer tools installed and then run: # Installing the bare build requirements brew install cmake # Installing useful tools for development brew install clang-format lcov doxygen  Next, build the library: mkdir build cd build cmake -DCMAKE_BUILD_TYPE=Release .. cmake --build .  Optionally, to run H3's test suite, run: ctest  By default, the filter applications are built when you build H3. Confirm they are working by running: ./bin/latLngToCell --lat 14 --lng -42 --resolution 2  ","version":null,"tagName":"h2"},{"title":"Cell mode","type":0,"sectionRef":"#","url":"/docs/library/index/cell","content":"","keywords":"","version":null},{"title":"H3 Cell Index​","type":1,"pageTitle":"Cell mode","url":"/docs/library/index/cell#h3-cell-index","content":"An H3 Cell index (mode 1) represents a cell (hexagon or pentagon) in the H3 grid system at a particular resolution. The components of the H3 Cell index are packed into a 64-bit integer in order, highest bit first, as follows: 1 bit reserved and set to 0,4 bits to indicate the H3 Cell index mode,3 bits reserved and set to 0,4 bits to indicate the cell resolution 0-15,7 bits to indicate the base cell 0-121,3 bits to indicate each subsequent digit 0-6 from resolution 1 up to the resolution of the cell (45 bits total are reserved for resolutions 1-15) The three bits for each unused digit are set to 7. ","version":null,"tagName":"h2"},{"title":"Bit layout of H3Index for cells​","type":1,"pageTitle":"Cell mode","url":"/docs/library/index/cell#bit-layout-of-h3index-for-cells","content":"The layout of an H3Index is shown below in table form. The interpretation of the &quot;Mode-Dependent&quot; field differs depending on the mode of the index. \t0x0F\t0x0E\t0x0D\t0x0C\t0x0B\t0x0A\t0x09\t0x08\t0x07\t0x06\t0x05\t0x04\t0x03\t0x02\t0x01\t0x00 0x30\tReserved (0)\tMode (1)\tReserved (0)\tResolution\tBase cell 0x20\tBase cell\tDigit 1\tDigit 2\tDigit 3\tDigit 4\tDigit 5 0x10\tDigit 5\tDigit 6\tDigit 7\tDigit 8\tDigit 9\tDigit 10 0x00\tDigit 10\tDigit 11\tDigit 12\tDigit 13\tDigit 14\tDigit 15 ","version":null,"tagName":"h2"},{"title":"Links​","type":1,"pageTitle":"Cell mode","url":"/docs/library/index/cell#links","content":"Observable notebook example: H3 Index Inspector ","version":null,"tagName":"h2"},{"title":"Vertex mode","type":0,"sectionRef":"#","url":"/docs/library/index/vertex","content":"","keywords":"","version":null},{"title":"Bit layout of H3Index for vertexes​","type":1,"pageTitle":"Vertex mode","url":"/docs/library/index/vertex#bit-layout-of-h3index-for-vertexes","content":"The layout of an H3Index for vertexes is shown below in table form. The interpretation of the &quot;Mode-Dependent&quot; field differs depending on the mode of the index. \t0x0F\t0x0E\t0x0D\t0x0C\t0x0B\t0x0A\t0x09\t0x08\t0x07\t0x06\t0x05\t0x04\t0x03\t0x02\t0x01\t0x00 0x30\tReserved (0)\tMode (4)\tVertex\tResolution\tBase cell 0x20\tBase cell\tDigit 1\tDigit 2\tDigit 3\tDigit 4\tDigit 5 0x10\tDigit 5\tDigit 6\tDigit 7\tDigit 8\tDigit 9\tDigit 10 0x00\tDigit 10\tDigit 11\tDigit 12\tDigit 13\tDigit 14\tDigit 15 ","version":null,"tagName":"h2"},{"title":"Error handling","type":0,"sectionRef":"#","url":"/docs/library/errors","content":"","keywords":"","version":null},{"title":"Example​","type":1,"pageTitle":"Error handling","url":"/docs/library/errors#example","content":"This code example checks for an error when calling an H3 function and prints a message if the call did not succeed: H3Error err; H3Index result; err = latLngToCell(lat, lng, res, &amp;result); if (err) { fprintf(stderr, &quot;Error: %d&quot;, err); }  ","version":null,"tagName":"h2"},{"title":"H3Error type​","type":1,"pageTitle":"Error handling","url":"/docs/library/errors#h3error-type","content":"The type returned by most H3 functions is H3Error, a 32 bit integer type with the following properties: H3Error will be an integer type of 32 bits, i.e. uint32_t.H3Error with value 0 indicates success (no error).No H3Error value will set the most significant bit.As a result of these properties, no H3Error value will set the bits that correspond with the Mode bit field in an H3Index. 32 bit return codes with the high bit never set allows for mixing error codes and resulting indexes if desired by the application, after copying the error codes into the result buffer. ","version":null,"tagName":"h2"},{"title":"Table of error codes​","type":1,"pageTitle":"Error handling","url":"/docs/library/errors#table-of-error-codes","content":"Value\tName\tDescription0\tE_SUCCESS\tSuccess (no error) 1\tE_FAILED\tThe operation failed but a more specific error is not available 2\tE_DOMAIN\tArgument was outside of acceptable range (when a more specific error code is not available) 3\tE_LATLNG_DOMAIN\tLatitude or longitude arguments were outside of acceptable range 4\tE_RES_DOMAIN\tResolution argument was outside of acceptable range 5\tE_CELL_INVALID\tH3Index cell argument was not valid 6\tE_DIR_EDGE_INVALID\tH3Index directed edge argument was not valid 7\tE_UNDIR_EDGE_INVALID\tH3Index undirected edge argument was not valid 8\tE_VERTEX_INVALID\tH3Index vertex argument was not valid 9\tE_PENTAGON\tPentagon distortion was encountered which the algorithm could not handle it 10\tE_DUPLICATE_INPUT\tDuplicate input was encountered in the arguments and the algorithm could not handle it 11\tE_NOT_NEIGHBORS\tH3Index cell arguments were not neighbors 12\tE_RES_MISMATCH\tH3Index cell arguments had incompatible resolutions 13\tE_MEMORY_ALLOC\tNecessary memory allocation failed 14\tE_MEMORY_BOUNDS\tBounds of provided memory were not large enough 15\tE_OPTION_INVALID\tMode or flags argument was not valid The H3 library may always add additional error messages. Error messages not recognized by the application should be treated as E_FAILED. ","version":null,"tagName":"h2"},{"title":"Bindings​","type":1,"pageTitle":"Error handling","url":"/docs/library/errors#bindings","content":"Bindings translate error codes into the error handling mechanism appropriate to their language. For example, Java will convert error codes into Java Exceptions. When possible, it is preferable to retain the error code. When this is not possible it is fine to elide them. Language bindings should include error messages that are formatted as is usual in their language. ","version":null,"tagName":"h3"},{"title":"References​","type":1,"pageTitle":"Error handling","url":"/docs/library/errors#references","content":"Technical RFC on error handling ","version":null,"tagName":"h2"},{"title":"Migrating from H3 version 3.x","type":0,"sectionRef":"#","url":"/docs/library/migrating-3.x","content":"Migrating from H3 version 3.x The H3 library introduced breaking changes in version 4.0.0, so applications developed against earlier versions need to be updated before they can use the new library version. Most of the changes relate to function naming, and some relate to the behavior of the functions. The grid itself - the layout of cells, which cell an H3 index refers to, and the structure of an H3 index - is not changed in 4.0.0. H3 indexes generated by 3.x will be understood the same by 4.0.0, and those generated by 4.0.0 will be understood the same in 3.x. The areas where there are changes include: Function naming Many function names have changed between 3.x and 4.0.0. These follow the H3 terminology reference, and that document explains how each function name has been renamed. These changes were made to make the API more consistent and predictable. Error codes The C library is being changed to more consistently report errors. This is done via the return code of functions. Users of the C library will need to adjust some function calls to pass output parameters instead of using the return value of a function.","keywords":"","version":null},{"title":"Directed edge mode","type":0,"sectionRef":"#","url":"/docs/library/index/directededge","content":"","keywords":"","version":null},{"title":"Bit layout of H3Index for directed edges​","type":1,"pageTitle":"Directed edge mode","url":"/docs/library/index/directededge#bit-layout-of-h3index-for-directed-edges","content":"The layout of an H3Index is shown below in table form. The interpretation of the &quot;Mode-Dependent&quot; field differs depending on the mode of the index. \t0x0F\t0x0E\t0x0D\t0x0C\t0x0B\t0x0A\t0x09\t0x08\t0x07\t0x06\t0x05\t0x04\t0x03\t0x02\t0x01\t0x00 0x30\tReserved (0)\tMode (2)\tEdge\tResolution\tBase cell 0x20\tBase cell\tDigit 1\tDigit 2\tDigit 3\tDigit 4\tDigit 5 0x10\tDigit 5\tDigit 6\tDigit 7\tDigit 8\tDigit 9\tDigit 10 0x00\tDigit 10\tDigit 11\tDigit 12\tDigit 13\tDigit 14\tDigit 15 ","version":null,"tagName":"h2"},{"title":"Terminology","type":0,"sectionRef":"#","url":"/docs/library/terminology","content":"","keywords":"","version":null},{"title":"Use of \"hex\", \"hexagon\", \"cell\", \"pentagon\", etc.​","type":1,"pageTitle":"Terminology","url":"/docs/library/terminology#use-of-hex-hexagon-cell-pentagon-etc","content":"We realize that &quot;hex&quot; or &quot;hexagon&quot; will still be used informally to refer to the concept of &quot;cell&quot; (As the development team, we do it ourselves!). This should be expected in casual, informal discussions of H3. However, when precision is required, we advise the use of strict technical terms like &quot;index&quot;, &quot;cell&quot;, &quot;hexagon&quot;, &quot;pentagon&quot;, etc. In the codebase and in the documentation, strictly correct terminology should always be used, as many functions and algorithms distinguish between hexagons and pentagons. ","version":null,"tagName":"h3"},{"title":"References​","type":1,"pageTitle":"Terminology","url":"/docs/library/terminology#references","content":"Technical RFC for naming concepts ","version":null,"tagName":"h2"},{"title":"Function name changes","type":0,"sectionRef":"#","url":"/docs/library/migration-3.x/functions","content":"","keywords":"","version":null},{"title":"General Function Names​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#general-function-names","content":"3.x name.\t4.0.0 nameDoes Not Exist (DNE)\tisValidIndex h3IsValid\tisValidCell h3UnidirectionalEdgeIsValid\tisValidDirectedEdge h3IsPentagon\tisPentagon h3IsResClassIII\tisResClassIII h3IndexesAreNeighbors\tareNeighborCells h3ToParent\tcellToParent h3ToCenterChild\tcellToCenterChild h3ToChildren\tcellToChildren numHexagons\tgetNumCells getRes0Indexes\tgetRes0Cells getPentagonIndexes\tgetPentagons h3GetBaseCell\tgetBaseCellNumber h3GetResolution\tgetResolution DNE\tgetMode h3GetFaces\tgetIcosahedronFaces geoToH3\tlatLngToCell h3ToGeo\tcellToLatLng compact\tcompactCells uncompact\tuncompactCells polyfill\tpolygonToCells Note: getResolution and getBaseCellNumber should work for both cells and edges. ","version":null,"tagName":"h3"},{"title":"H3 Grid Functions​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#h3-grid-functions","content":"Many of these functions will have three forms: &lt;func_name&gt;&lt;func_name&gt;Unsafe&lt;func_name&gt;Safe The Unsafe version is fast, but may fail if it encounters a pentagon. It should return a failure code in this case. The Safe version is slower, but will work in all cases. The version without either suffix is intended to be the one typically used. This version will first attempt the Unsafe version, and if it detects failure, will fall back to the Safe version. Encountering pentagons is rare in most use-cases, so this version should usually be equivalent to the fast version, but with a guarantee that it will not fail. Initially, we will not expose the Safe versions to users in the API. We may expose them in the future if a need becomes clear. Distance​ 3.x name.\t4.0.0 nameh3Distance\tgridDistance h3Line\tgridPathCells DNE\tgridPathEdges DNE\tgridPathDirectedEdges Filled-In Disk With Distances​ 3.x name.\t4.0.0 name\tCallshexRangeDistances\tgridDiskDistancesUnsafe\tNONE _kRingInternal\tgridDiskDistancesSafe\tNONE kRingDistances\tgridDiskDistances\thexRangeDistances, _kRingInternal Filled-In Disk Without Distances​ 3.x name.\t4.0.0 name\tCallshexRange\tgridDiskUnsafe\thexRangeDistances DNE\tgridDiskSafe kRing\tgridDisk\tkRingDistances hexRanges\tgridDisksUnsafe\tN x hexRange Hollow Ring​ 3.x name.\t4.0.0 name\tCallshexRing\tgridRingUnsafe\tNONE DNE\tgridRingSafe\tgridDiskDistancesSafe DNE\tgridRing\tgridRingUnsafe, gridRingSafe Local IJ​ 3.x name\t4.0.0 nameexperimentalLocalIjToH3\tlocalIjToCell experimentalH3ToLocalIj\tcellToLocalIj ","version":null,"tagName":"h3"},{"title":"H3 Edge Types​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#h3-edge-types","content":"Instead of UnidirectionalEdge, use the term DirectedEdge. For a future undirected edge mode, use the term Edge. 3.x name.\t4.0.0 nameh3UnidirectionalEdgeIsValid\tisValidDirectedEdge getH3UnidirectionalEdge\tcellsToDirectedEdge getH3IndexesFromUnidirectionalEdge\tdirectedEdgeToCells getH3UnidirectionalEdgesFromHexagon\toriginToDirectedEdges DNE\tdestinationToDirectedEdges getH3UnidirectionalEdgeBoundary\tdirectedEdgeToBoundary getOriginH3IndexFromUnidirectionalEdge\tgetDirectedEdgeOrigin getDestinationH3IndexFromUnidirectionalEdge\tgetDirectedEdgeDestination ","version":null,"tagName":"h3"},{"title":"Area/Length Functions​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#arealength-functions","content":"3.x name.\t4.0.0 namehexAreaKm2\tgetHexagonAreaAvgKm2 hexAreaM2\tgetHexagonAreaAvgM2 edgeLengthKm\tgetHexagonEdgeLengthAvgKm edgeLengthM\tgetHexagonEdgeLengthAvgM DNE\tgetPentagonAreaAvg* DNE\tgetPentagonEdgeLengthAvg* DNE\tcellAreaKm2 DNE\tcellAreaM2 pointDistKm\tgreatCircleDistanceKm pointDistM\tgreatCircleDistanceM pointDistRads\tgreatCircleDistanceRads exactEdgeLengthRads\tedgeLengthRads exactEdgeLengthKm\tedgeLengthKm exactEdgeLengthM\tedgeLengthM Note: cellAreaKm2 and cellAreaM2 would return the actual area of the passed-in cell. ","version":null,"tagName":"h3"},{"title":"Polygons​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#polygons","content":"","version":null,"tagName":"h2"},{"title":"Data Structures​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#data-structures","content":"rename GeoBoundary to CellBoundary to indicate it is space-limited to describing the geometry of cells 3.x name\t4.0.0 name\tNotesGeoBoundary\tCellBoundary\t&lt;= 10 stack-allocated LatLngs GeoCoord\tLatLng Geofence\tGeoLoop\theap-allocated LatLngs GeoPolygon\tGeoPolygon GeoMultiPolygon\tGeoMultiPolygon\tcurrently not used ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Function name changes","url":"/docs/library/migration-3.x/functions#functions","content":"3.x name\t4.0.0 name\tNotesh3ToGeoBoundary\tcellToBoundary\treturns CellBoundary DNE\tcellToLoop\treturns GeoLoop DNE\tloopToBoundary DNE\tboundaryToLoop getH3UnidirectionalEdgeBoundary\tdirectedEdgeToBoundary\treturns CellBoundary h3SetToLinkedGeo\tcellsToLinkedMultiPolygon\treturns LinkedGeoPolygon h3SetToMultiPolygon\tcellsToMultiPolygon\tbindings only ","version":null,"tagName":"h3"},{"title":"Quick Start","type":0,"sectionRef":"#","url":"/docs/quickstart","content":"","keywords":"","version":null},{"title":"Point / cell​","type":1,"pageTitle":"Quick Start","url":"/docs/quickstart#point--cell","content":"First, we'll take the coordinates of the Ferry Building in San Francisco and find the containing H3 cell: Live Editor function example() { const lat = 37.7955; const lng = -122.3937; const res = 10; return h3.latLngToCell(lat, lng, res); } function example() { const lat = 37.7955; const lng = -122.3937; const res = 10; return h3.latLngToCell(lat, lng, res); } Result Loading... The result is the identifier of the hexagonal cell in H3 containing this point. We can retrieve the center of this cell: Live Editor function example() { const h = '8a283082a677fff'; return h3.cellToLatLng(h); } function example() { const h = '8a283082a677fff'; return h3.cellToLatLng(h); } Result Loading... Note that the result of this example is not our original coordinates. That's because the identifier represents the hexagonal cell, not the coordinates. All points indexed in H3 within the bounds of this cell will have the same identifier. We can find the bounds of this cell: Live Editor function example() { const h = '8a283082a677fff'; return h3.cellToBoundary(h); } function example() { const h = '8a283082a677fff'; return h3.cellToBoundary(h); } Result Loading... ","version":null,"tagName":"h2"}],"options":{"excludeRoutes":["docs/3.x/**"],"disableVersioning":true,"id":"default"}}